from datasets import load_dataset
from unitxt import add_to_catalog
from pathlib import Path

from unitxt.blocks import (
    LoadHF,
    SplitRandomMix,
    AddFields,
    TaskCard,
    NormalizeListFields,
    FormTask,
    TemplatesList,
    InputOutputTemplate,
    MapInstanceValues
)
from unitxt.operators import FilterByListsOfValues


dataset_name = 'ledgar'

LEDGAR_CATEGORIES = [
    "Adjustments",
    "Agreements",
    "Amendments",
    "Anti-Corruption Laws",
    "Applicable Laws",
    "Approvals",
    "Arbitration",
    "Assignments",
    "Assigns",
    "Authority",
    "Authorizations",
    "Base Salary",
    "Benefits",
    "Binding Effects",
    "Books",
    "Brokers",
    "Capitalization",
    "Change In Control",
    "Closings",
    "Compliance With Laws",
    "Confidentiality",
    "Consent To Jurisdiction",
    "Consents",
    "Construction",
    "Cooperation",
    "Costs",
    "Counterparts",
    "Death",
    "Defined Terms",
    "Definitions",
    "Disability",
    "Disclosures",
    "Duties",
    "Effective Dates",
    "Effectiveness",
    "Employment",
    "Enforceability",
    "Enforcements",
    "Entire Agreements",
    "Erisa",
    "Existence",
    "Expenses",
    "Fees",
    "Financial Statements",
    "Forfeitures",
    "Further Assurances",
    "General",
    "Governing Laws",
    "Headings",
    "Indemnifications",
    "Indemnity",
    "Insurances",
    "Integration",
    "Intellectual Property",
    "Interests",
    "Interpretations",
    "Jurisdictions",
    "Liens",
    "Litigations",
    "Miscellaneous",
    "Modifications",
    "No Conflicts",
    "No Defaults",
    "No Waivers",
    "Non-Disparagement",
    "Notices",
    "Organizations",
    "Participations",
    "Payments",
    "Positions",
    "Powers",
    "Publicity",
    "Qualifications",
    "Records",
    "Releases",
    "Remedies",
    "Representations",
    "Sales",
    "Sanctions",
    "Severability",
    "Solvency",
    "Specific Performance",
    "Submission To Jurisdiction",
    "Subsidiaries",
    "Successors",
    "Survival",
    "Tax Withholdings",
    "Taxes",
    "Terminations",
    "Terms",
    "Titles",
    "Transactions With Affiliates",
    "Use Of Proceeds",
    "Vacations",
    "Venues",
    "Vesting",
    "Waiver Of Jury Trials",
    "Waivers",
    "Warranties",
    "Withholdings",
]
map_labels = {str(i):[k.lower()] for i, k in enumerate(LEDGAR_CATEGORIES)}


card = TaskCard(
    loader=LoadHF(path=f'lex_glue', name=f'{dataset_name}'),
    preprocess_steps=[
        SplitRandomMix({'train': 'train', 'dev': 'validation', 'test':'test'}),
        MapInstanceValues({'label': map_labels}),
        FilterByListsOfValues(required_values={"label": [v for v in map_labels.values() if v[0] != 'general']}),
    ],
    templates=TemplatesList([
        InputOutputTemplate(
            input_format='{text}',
            output_format='{label}',
        ),
    ]),
    task=FormTask(
        inputs=["text"],
        outputs=["label"],
        metrics=["metrics.f1_micro",
                 "metrics.accuracy", "metrics.f1_macro"],
    ),
)

add_to_catalog(artifact=card, name=f'cards.{dataset_name}', overwrite=True)
#ds = load_dataset(f'unitxt/data', f'card=cards.{dataset_name},template_card_index=0')
