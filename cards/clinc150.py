from datasets import load_dataset
from unitxt import add_to_catalog

from unitxt.operators import FilterByListsOfValues

from unitxt.blocks import (
    LoadHF,
    SplitRandomMix,
    AddFields,
    TaskCard,
    NormalizeListFields,
    FormTask,
    TemplatesList,
    InputOutputTemplate,
    MapInstanceValues,
    RenameFields,
)

dataset_name = 'clinc150'


original_mappings = {
 '0': 'restaurant_reviews',
 '1': 'nutrition_info',
 '2': 'account_blocked',
 '3': 'oil_change_how',
 '4': 'time',
 '5': 'weather',
 '6': 'redeem_rewards',
 '7': 'interest_rate',
 '8': 'gas_type',
 '9': 'accept_reservations',
 '10': 'smart_home',
 '11': 'user_name',
 '12': 'report_lost_card',
 '13': 'repeat',
 '14': 'whisper_mode',
 '15': 'what_are_your_hobbies',
 '16': 'order',
 '17': 'jump_start',
 '18': 'schedule_meeting',
 '19': 'meeting_schedule',
 '20': 'freeze_account',
 '21': 'what_song',
 '22': 'meaning_of_life',
 '23': 'restaurant_reservation',
 '24': 'traffic',
 '25': 'make_call',
 '26': 'text',
 '27': 'bill_balance',
 '28': 'improve_credit_score',
 '29': 'change_language',
 '30': 'no',
 '31': 'measurement_conversion',
 '32': 'timer',
 '33': 'flip_coin',
 '34': 'do_you_have_pets',
 '35': 'balance',
 '36': 'tell_joke',
 '37': 'last_maintenance',
 '38': 'exchange_rate',
 '39': 'uber',
 '40': 'car_rental',
 '41': 'credit_limit',
 '42': 'oos',
 '43': 'shopping_list',
 '44': 'expiration_date',
 '45': 'routing',
 '46': 'meal_suggestion',
 '47': 'tire_change',
 '48': 'todo_list',
 '49': 'card_declined',
 '50': 'rewards_balance',
 '51': 'change_accent',
 '52': 'vaccines',
 '53': 'reminder_update',
 '54': 'food_last',
 '55': 'change_ai_name',
 '56': 'bill_due',
 '57': 'who_do_you_work_for',
 '58': 'share_location',
 '59': 'international_visa',
 '60': 'calendar',
 '61': 'translate',
 '62': 'carry_on',
 '63': 'book_flight',
 '64': 'insurance_change',
 '65': 'todo_list_update',
 '66': 'timezone',
 '67': 'cancel_reservation',
 '68': 'transactions',
 '69': 'credit_score',
 '70': 'report_fraud',
 '71': 'spending_history',
 '72': 'directions',
 '73': 'spelling',
 '74': 'insurance',
 '75': 'what_is_your_name',
 '76': 'reminder',
 '77': 'where_are_you_from',
 '78': 'distance',
 '79': 'payday',
 '80': 'flight_status',
 '81': 'find_phone',
 '82': 'greeting',
 '83': 'alarm',
 '84': 'order_status',
 '85': 'confirm_reservation',
 '86': 'cook_time',
 '87': 'damaged_card',
 '88': 'reset_settings',
 '89': 'pin_change',
 '90': 'replacement_card_duration',
 '91': 'new_card',
 '92': 'roll_dice',
 '93': 'income',
 '94': 'taxes',
 '95': 'date',
 '96': 'who_made_you',
 '97': 'pto_request',
 '98': 'tire_pressure',
 '99': 'how_old_are_you',
 '100': 'rollover_401k',
 '101': 'pto_request_status',
 '102': 'how_busy',
 '103': 'application_status',
 '104': 'recipe',
 '105': 'calendar_update',
 '106': 'play_music',
 '107': 'yes',
 '108': 'direct_deposit',
 '109': 'credit_limit_change',
 '110': 'gas',
 '111': 'pay_bill',
 '112': 'ingredients_list',
 '113': 'lost_luggage',
 '114': 'goodbye',
 '115': 'what_can_i_ask_you',
 '116': 'book_hotel',
 '117': 'are_you_a_bot',
 '118': 'next_song',
 '119': 'change_speed',
 '120': 'plug_type',
 '121': 'maybe',
 '122': 'w2',
 '123': 'oil_change_when',
 '124': 'thank_you',
 '125': 'shopping_list_update',
 '126': 'pto_balance',
 '127': 'order_checks',
 '128': 'travel_alert',
 '129': 'fun_fact',
 '130': 'sync_device',
 '131': 'schedule_maintenance',
 '132': 'apr',
 '133': 'transfer',
 '134': 'ingredient_substitution',
 '135': 'calories',
 '136': 'current_location',
 '137': 'international_fees',
 '138': 'calculator',
 '139': 'definition',
 '140': 'next_holiday',
 '141': 'update_playlist',
 '142': 'mpg',
 '143': 'min_payment',
 '144': 'change_user_name',
 '145': 'restaurant_suggestion',
 '146': 'travel_notification',
 '147': 'cancel',
 '148': 'pto_used',
 '149': 'travel_suggestion',
 '150': 'change_volume'}



our_mappings = {
    'oos':'oos',
    'cancel':'cancel',
    'translate': 'translation', 'transfer': 'transfer', 'timer': 'timer', 'definition': 'definition',
                 'meaning_of_life': 'meaning of life', 'insurance_change': 'insurance change',
                 'find_phone': 'finding a phone', 'travel_alert': 'travel alert', 'pto_request': 'pto request',
                 'improve_credit_score': 'improving credit score', 'fun_fact': 'fun fact',
                 'change_language': 'changing language', 'payday': 'payday',
                 'replacement_card_duration': 'replacement card duration', 'time': 'time',
                 'application_status': 'application status', 'flight_status': 'flight status',
                 'flip_coin': 'fliping a coin', 'change_user_name': 'changing user name',
                 'where_are_you_from': 'where you are from', 'shopping_list_update': 'shopping list update',
                 'what_can_i_ask_you': 'what i can ask you', 'maybe': 'not being sure',
                 'oil_change_how': 'how to change oil', 'restaurant_reservation': 'restaurant reservation',
                 'balance': 'balance', 'confirm_reservation': 'confirming reservation',
                 'freeze_account': 'freezing account', 'rollover_401k': 'rollover 401k', 'who_made_you': 'who made you',
                 'distance': 'distance', 'user_name': 'user name', 'timezone': 'timezone', 'next_song': 'next song',
                 'transactions': 'transactions', 'restaurant_suggestion': 'restaurant suggestion',
                 'rewards_balance': 'rewards balance', 'pay_bill': 'paying a bill',
                 'spending_history': 'spending history', 'pto_request_status': 'pto request status',
                 'credit_score': 'credit score', 'new_card': 'new card', 'lost_luggage': 'lost luggage',
                 'repeat': 'repeat', 'mpg': 'mpg', 'oil_change_when': 'when to change oil', 'yes': 'assertion',
                 'travel_suggestion': 'travel suggestion', 'insurance': 'insurance',
                 'todo_list_update': 'todo list update', 'reminder': 'reminder', 'change_speed': 'changing speed',
                 'tire_pressure': 'tire pressure', 'no': 'negation', 'apr': 'apr', 'nutrition_info': 'nutrition info',
                 'calendar': 'calendar', 'uber': 'uber', 'calculator': 'calculator', 'date': 'date',
                 'carry_on': 'carry ons', 'pto_used': 'pto used', 'schedule_maintenance': 'scheduling maintenance',
                 'travel_notification': 'travel notification', 'sync_device': 'sync device', 'thank_you': 'thank you',
                 'roll_dice': 'roll dice', 'food_last': 'food expiration', 'cook_time': 'cook time',
                 'reminder_update': 'reminder update', 'report_lost_card': 'reporting a lost card',
                 'ingredient_substitution': 'ingredient substitution', 'make_call': 'making a call', 'alarm': 'alarm',
                 'todo_list': 'todo list', 'change_accent': 'changing an accent', 'w2': 'w2', 'bill_due': 'bill due',
                 'calories': 'calories', 'damaged_card': 'damaged card', 'restaurant_reviews': 'restaurant reviews',
                 'routing': 'routing', 'do_you_have_pets': 'question about your pets',
                 'schedule_meeting': 'scheduling a meeting', 'gas_type': 'gas type', 'plug_type': 'plug type',
                 'tire_change': 'tire change', 'exchange_rate': 'exchange rate', 'next_holiday': 'next holiday',
                 'change_volume': 'changing volume', 'who_do_you_work_for': 'whom do you work for',
                 'credit_limit': 'credit limit', 'how_busy': 'waiting time',
                 'accept_reservations': 'accepting reservations', 'order_status': 'order status',
                 'pin_change': 'pin change', 'goodbye': 'goodbye', 'account_blocked': 'account blocked',
                 'what_song': 'what song', 'international_fees': 'international fees',
                 'last_maintenance': 'last maintenance', 'meeting_schedule': 'meeting schedule',
                 'ingredients_list': 'ingredients list', 'report_fraud': 'reporting fraud',
                 'measurement_conversion': 'measurement conversion', 'smart_home': 'smart home',
                 'book_hotel': 'booking a hotel', 'current_location': 'current location', 'weather': 'weather',
                 'taxes': 'taxes', 'min_payment': 'min payment', 'whisper_mode': 'whisper mode', 
                 'international_visa': 'international visa', 'vaccines': 'vaccines', 'pto_balance': 'pto balance',
                 'directions': 'directions', 'spelling': 'spelling', 'greeting': 'greeting',
                 'reset_settings': 'reset settings', 'what_is_your_name': 'what your name is',
                 'direct_deposit': 'direct deposit', 'interest_rate': 'interest rate',
                 'credit_limit_change': 'credit limit change', 'what_are_your_hobbies': 'what your hobbies are',
                 'book_flight': 'booking a flight', 'shopping_list': 'shopping list', 'text': 'text',
                 'bill_balance': 'bill balance', 'share_location': 'sharing location',
                 'redeem_rewards': 'redeem rewards', 'play_music': 'asking to play music',
                 'calendar_update': 'calendar update', 'are_you_a_bot': 'asking if you are a bot', 'gas': 'gas',
                 'expiration_date': 'expiration date', 'update_playlist': 'updating playlist',
                 'cancel_reservation': 'canceling reservation', 'tell_joke': 'telling a joke',
                 'change_ai_name': 'changing ai name', 'how_old_are_you': 'how old you are', 'car_rental': 'car rental',
                 'jump_start': 'jump start', 'meal_suggestion': 'meal suggestion', 'recipe': 'recipe',
                 'income': 'income', 'order': 'order', 'traffic': 'traffic', 'order_checks': 'ordering checks',
                 'card_declined': 'declined card'}

map_labels = {k: [our_mappings[v]] for k,v in original_mappings.items()}
card = TaskCard(
        loader=LoadHF(path=f'clinc_oos', name='plus'),
        preprocess_steps=[
            SplitRandomMix({'train': 'train', 'dev': 'validation', 'test': 'test'}),
            RenameFields(field_to_field={"intent": "label"}),
            MapInstanceValues(mappers={'label': map_labels}),
            FilterByListsOfValues(required_values={"label": [v for v in map_labels.values() if v[0] != 'oos']}),
            
        ],
        task=FormTask(
            inputs=["text"],
            outputs=["label"],
            metrics=["metrics.f1_micro", "metrics.accuracy", "metrics.f1_macro"],
        ),
        templates=TemplatesList([
            InputOutputTemplate(
                input_format='{text}',
                output_format='{label}',
            ),
        ])
    )

add_to_catalog(artifact=card, name=f'cards.{dataset_name}',overwrite=True)
# ds = load_dataset(f'unitxt/data', f'card=cards.{dataset_name},template_card_index=0') 
