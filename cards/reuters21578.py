from itertools import product
from datasets import load_dataset
from unitxt import add_to_catalog
from pathlib import Path

from unitxt.operators import Intersect

from unitxt.blocks import (
    LoadHF,
    SplitRandomMix,
    TaskCard,
    FormTask,
    TemplatesList,
    InputOutputTemplate,
    MapInstanceValues,
    RenameFields,
)
keep_labels = [
  "copper",
  "interest",
  "gold",
  "ships",
  "crude",
  "acquisition",
  "jobs",
  "grain",
  "trade",
  "gross national product",
  "cocoa",
  "money foreign exchange",
  "coffee",
  "money supply",
  "oilseed",
  "vegetable oil",
  "livestock",
  "sugar",
  "earnings",
  "consumer price index"
]

dataset_name = 'reuters21578'

map_labels = {
    'pet-chem': 'pet chem',
 'income': 'income',
 'strategic-metal': 'strategic metal',
 'lei': 'lei',
 'rand': 'rand',
 'livestock': 'livestock',
 'gold': 'gold',
 'coconut-oil': 'coconut oil',
 'rupiah': 'rupiah',
 'nkr': 'nkr',
 'oat': 'oat',
 'propane': 'propane',
 'saudriyal': 'saudriyal',
 'sorghum': 'sorghum',
 'tea': 'tea',
 'cotton-oil': 'cotton oil',
 'nat-gas': 'nat gas',
 'fuel': 'fuel',
 'citruspulp': 'citruspulp',
 'nzdlr': 'nzdlr',
 'stg': 'stg',
 'sun-meal': 'sun meal',
 'cruzado': 'cruzado',
 'dfl': 'dfl',
 'castorseed': 'castorseed',
 'rice': 'rice',
 'cornglutenfeed': 'cornglutenfeed',
 'cpi': 'consumer price index',
 'meal-feed': 'meal feed',
 'wheat': 'wheat',
 'crude': 'crude',
 'gnp': 'gross national product',
 'ship': 'ships',
 'acq': 'acquisition',
 'barley': 'barley',
 'cottonseed': 'cottonseed',
 'lin-oil': 'lin oil',
 'corn-oil': 'corn oil',
 'silver': 'silver',
 'soy-meal': 'soy meal',
 'tapioca': 'tapioca',
 'orange': 'orange',
 'plywood': 'plywood',
 'lead': 'lead',
 'tin': 'tin',
 'f-cattle': 'f cattle',
 'sfr': 'sfr',
 'linseed': 'linseed',
 'sugar': 'sugar',
 'pork-belly': 'pork belly',
 'jobs': 'jobs',
 'naphtha': 'naphtha',
 'rye': 'rye',
 'lumber': 'lumber',
 'interest': 'interest',
 'dkr': 'dkr',
 'platinum': 'platinum',
 'money-supply': 'money supply',
 'rape-meal': 'rape meal',
 'coconut': 'coconut',
 'gas': 'gas',
 'heat': 'heat',
 'retail': 'retail',
 'ipi': 'ipi',
 'ringgit': 'ringgit',
 'copra-cake': 'copra cake',
 'zinc': 'zinc',
 'rapeseed': 'rapeseed',
 'cpu': 'cpu',
 'lit': 'lit',
 'fishmeal': 'fishmeal',
 'soy-oil': 'soy oil',
 'veg-oil': 'vegetable oil',
 'yen': 'yen',
 'carcass': 'carcass',
 'lin-meal': 'lin meal',
 'red-bean': 'red bean',
 'jet': 'jet',
 'wpi': 'wpi',
 'castor-oil': 'castor oil',
 'copper': 'copper',
 'coffee': 'coffee',
 'wool': 'wool',
 'cocoa': 'cocoa',
 'groundnut-oil': 'groundnut oil',
 'peseta': 'peseta',
 'palm-oil': 'palm oil',
 'dmk': 'dmk',
 'bop': 'bop',
 'l-cattle': 'l cattle',
 'oilseed': 'oilseed',
 'instal-debt': 'instal debt',
 'grain': 'grain',
 'iron-steel': 'iron steel',
 'reserves': 'reserves',
 'rubber': 'rubber',
 'rape-oil': 'rape oil',
 'housing': 'housing',
 'inventories': 'inventories',
 'potato': 'potato',
 'hog': 'hog',
 'trade': 'trade',
 'earn': 'earnings',
 'skr': 'skr',
 'sun-oil': 'sun oil',
 'palladium': 'palladium',
 'sunseed': 'sunseed',
 'dlr': 'dlr',
 'can': 'can',
 'soybean': 'soybean',
 'corn': 'corn',
 'cotton': 'cotton',
 'austdlr': 'austdlr',
 'palmkernel': 'palmkernel',
 'groundnut': 'groundnut',
 'alum': 'alum',
 'money-fx': 'money foreign exchange',
 'nickel': 'nickel'}

label_names = list(map_labels.keys())



card = TaskCard(    
    loader=LoadHF(path=f'{dataset_name}', name='ModApte'),
    preprocess_steps=[
        SplitRandomMix(
            {'train': 'train[85%]', 'dev': 'train[15%]', 'test': 'test'}),
        RenameFields(field_to_field={"topics": "labels"}),
        MapInstanceValues(mappers= {'labels': map_labels}, strict=False, process_every_value=True),
        Intersect(field="labels", allowed_values=keep_labels)
        
    ],
    task=FormTask(
        inputs=["text"],
        outputs=["labels"],
        metrics=["metrics.f1_micro",
                 "metrics.accuracy", "metrics.f1_macro"],
    ),
    templates=TemplatesList([
        InputOutputTemplate(
            input_format='{text}',
            output_format='{labels}',
        ),
    ])
)

add_to_catalog(artifact=card, name=f'cards.{dataset_name}', overwrite=True)
#ds = load_dataset(f'unitxt/data', f'card=cards.{dataset_name},template_card_index=0')
#print(ds['dev']['additional_inputs'][0])